module.exports = {
    emits: {
        data: 'data',
        end: 'end',
        error: 'error',
        snapshot: 'snapshot'
    },
    messages_databases: {
        CONNECTION_END: 'Connection ended',
        ERROR_BATCH: 'Batch size exceeds the limit of',
        QUERY_ERROR: 'Error executing query',
        QUERY_EXECUTED: 'Query successfully executed',
        ST: 'Starting transaction',
        START_BATCH: 'Starting batch query',
        START_COMMIT: 'Starting commit',
        START_QUERY: 'Starting single query',
        TRANSACTION_ERROR: 'Failed, changes are undone and connection is closed'
    },
    ELASTICIO_LISTEN_MESSAGES_ON: process.env.ELASTICIO_LISTEN_MESSAGES_ON || null,
    md5sum: 'md5sum',
    ERROR_PROPERTY: 'Error, missing property',
    ERROR_WITH_PROPERTY: 'An error with the property',
    FINISH_EXEC: 'Execution finished',
    PROCESS_SUCCESS: 'Process successfully completed',
    START_PROCESS: 'Process started',
    START_EXEC: 'Execution started',
    START_TRANS: 'Transaction started',
    SUCCESS_TRANS: 'Success transformation',
    //Temp env vars (will be removed once step cero is implemented)
    URI_RABBITMQ: process.env.URI_RABBITMQ || 'amqp://guest:guest@rabbitmq-service.oih.svc.cluster.local',
    IAM_OIH: process.env.IAM_OIH || 'http://iam.oih.cgdemos.com/login',
    IAM_OIH_USER: process.env.IAM_OIH_USER,
    IAM_OIH_PWS: process.env.IAM_OIH_PWS,
    FLOWS_OIH: process.env.FLOWS_OIH || 'http://flow-repository.oih.cgdemos.com/flows/',
    //Env var for step 0 (need to ve changed depending on installatio config).
    SYS_PROJECT_NAME: process.env.SYS_PROJECT_NAME || 'eFuse',
    SYS_SUBPROJECT_LOGGIN_NAME: process.env.SYS_SUBPROJECT_LOGGIN_NAME || 'logging',
    SYS_SUBPROJECT_PLATFORM_NAME: process.env.SYS_SUBPROJECT_PLATFORM_NAME || 'OIH',
    SYS_PROPS_API: process.env.SYS_PROPS_API || 'http://configmgr.knative-deployed.knative.efuse.n3xgen.io/sysconfigmgr',
    PROPS_API: process.env.PROPS_API || 'http://configmgr.knative-deployed.knative.efuse.n3xgen.io/configmgr',
    GQD_API: process.env.GQD_API || 'http://snapshot-service.knative-deployed.knative.efuse.n3xgen.io/get_quickData',
    IQD_API: process.env.IQD_API || 'http://snapshot-service.knative-deployed.knative.efuse.n3xgen.io/ins_quickData',
    ERROR_JSON_FORMAT:'Bad JSON format',
    ERROR_XML_FORMAT:'Bad XML Structure format',
    ERROR_MD5:'Failed to validate md5 checksum',
    ERROR_CONVERT_ENCODING : 'Error during validation, null, undefined or bad encoding to convert',
    log_levels: {
        info: "info",
        error: "error",
        debug: "debug",
        warn: "warn"
    },
    flags: {
        CREATEDIRECTORY: 'CREATEDIRECTORY',
        DELETEDIRECTORY: 'DELETEDIRECTORY',
        DELETEFILE: 'DELETEFILE',
        DOWNLOADIRECTORY: 'DOWNLOADIRECTORY',
        GETFILE: 'GETFILE',
        GETLISTFILES: 'GETLISTFILES',
        RENAMEFILE: 'RENAMEFILE',
        SAVEFILE: 'SAVEFILE',
        UPLOADIRECTORY: 'UPLOADIRECTORY'
    },
    PAYLOAD_NOT_ALLOWED: 'Payload was not allowed'
};
